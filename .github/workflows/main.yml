name: CI/CD

on: [push, pull_request]

jobs:
  lint:
    name: "[CI] Lint Project"
    runs-on: ubuntu-latest

    steps:
      - name: 🛎 Checkout
        uses: actions/checkout@master

      - name: 🏗 Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: 🗂️ Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 📦 Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 🚚 Install dependencies
        run: yarn

      - name: 👀 Run linter
        run: yarn lint
  
#   build:
#     name: "[CD] Build Project"
#     runs-on: ubuntu-latest
#     needs: [lint]

#     steps:
#     - name: 🛎 Checkout
#       uses: actions/checkout@master

#     - name: 🏗 Setup node env
#       uses: actions/setup-node@v2.1.2
#       with:
#         node-version: 14

#     - name: 🗂️ Get yarn cache directory path
#       id: yarn-cache-dir-path
#       run: echo "::set-output name=dir::$(yarn cache dir)"

#     - name: 📦 Cache node_modules
#       uses: actions/cache@v2
#       id: yarn-cache
#       with:
#         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-yarn-

#     - name: 🚚 Install dependencies
#       run: yarn

#     - name: 🏗️ Build Project
#       run: yarn generate
